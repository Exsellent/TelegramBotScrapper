app:
  telegram-token: ${APP_TELEGRAM_TOKEN}
scrapper:
  api:
    base-url: ${SCRAPPER_API_BASE_URL:http://scrapper:8081/api}
    actuator-url: ${SCRAPPER_ACTUATOR_URL:http://scrapper:8081/actuator}

spring:
  datasource:
    url: jdbc:postgresql://postgresql:5432/scrapper
    username: exsellent
    password: ${POSTGRES_PASSWORD:default_password}
    driver-class-name: org.postgresql.Driver
  config:
    import: optional:file:.env
  application:
    name: bot
  jackson:
    time-zone: UTC
  kafka:
    bootstrap-servers: kafka:9092
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: backend.academy.bot.dto,backend.academy.scrapper.dto
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

server:
  port: 8080
logging:
  level:
    org.springframework.core.env: TRACE
    backend.academy.bot: DEBUG
    org.apache.kafka: DEBUG
springdoc:
  swagger-ui:
    path: /swagger-ui
http:
  client:
    connectTimeout: 5000
    readTimeout: 10000
retry:
  max-attempts: 5
  first-backoff-seconds: 5
  retryable-status-codes: [500, 502, 503, 504, 429]
rate-limiting:
  request-limit: 100
  window-seconds: 60
