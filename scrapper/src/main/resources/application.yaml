server:
  port: 8081

spring:
  datasource:
    url: jdbc:postgresql://postgresql:5432/scrapper
    username: exsellent
    password: ${POSTGRES_PASSWORD:default_password}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  liquibase:
    enabled: false
  jackson:
    deserialization:
      fail-on-unknown-properties: false
    serialization:
      write-dates-as-timestamps: false
  application:
    name: scrapper
  kafka:
    bootstrap-servers: kafka:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
  data:
    redis:
      host: redis
      port: 6379
management:
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: always

http:
  client:
    connectTimeout: 5000
    readTimeout: 10000

retry:
  max-attempts: 3
  first-backoff-seconds: 1
  retryable-status-codes: [500, 502, 503, 504]

rate-limiting:
  request-limit: 100
  window-seconds: 60

github:
  base:
    url: ${GITHUB_BASE_URL:https://api.github.com}

stackoverflow:
  base:
    url: ${STACKOVERFLOW_BASE_URL:https://api.stackexchange.com/2.2}

resilience4j:
  circuitbreaker:
    instances:
      gitHubClient:
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        permittedNumberOfCallsInHalfOpenState: 3
        waitDurationInOpenState: 10s
      stackOverflowClient:
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        permittedNumberOfCallsInHalfOpenState: 3
        waitDurationInOpenState: 10s
      botApiClient:
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        permittedNumberOfCallsInHalfOpenState: 3
        waitDurationInOpenState: 10s
      scrapperApiClient:
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        permittedNumberOfCallsInHalfOpenState: 3
        waitDurationInOpenState: 10s

bot:
  api:
    baseurl: ${BOT_API_BASEURL:http://bot:8080}

app:
  scheduler:
    enable: true
    interval: PT5M
    force-check-delay: PT1M
  telegram-token: ${APP_TELEGRAM_TOKEN}
  message-transport: Kafka
  kafka:
    topics:
      notifications: link-updates
      dlq: link-updates-dlq
      link-commands: link-commands
  database-access-type: JDBC
  check-interval-minutes: 5

scrapper:
  api:
    base-url: ${SCRAPPER_API_BASE_URL:http://scrapper:8081/api}

logging:
  level:
    org.springframework.boot.actuate: DEBUG
    org.springframework.data.redis: DEBUG
